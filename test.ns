axiom nat:TYPE;
let f: (Πx:nat.TYPE) := (λx : nat. TYPE)   ; #(f f)
let g: (Πx:nat.TYPE) := (\lambda x:nat. f x)   ;
#let Type := Πx : TYPE. f ;
#(Πx : TYPE. f) TYPE

inductive nat := 
    | o
    | s (n: nat)
;

#let t := o;
#let z := match t with | o => t | s n => o ;;