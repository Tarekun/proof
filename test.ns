#axiom nat:TYPE;
#let f := (λx : nat. TYPE)   ; #(f f)
#let g := (\lambda x:nat. f x)   ;
#let Type := Πx : TYPE. f ;
#(Πx : TYPE. f) TYPE

inductive nat := 
    | o
    | s n
;

let t := o;
let z := match t with
    | o => t 
    | s n => o
;;