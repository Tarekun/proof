#axiom nat:TYPE;
#let f := (λx : nat. TYPE)   ; #(f f)
#let g := (\lambda x:nat. f x)   ;
#let Type := Πx : TYPE. f ;
#(Πx : TYPE. f) TYPE

inductive Ind := 
    | c nat
    | g
;

let t := g;
let z := match t with
    | g => t 
    | c n => g
;;